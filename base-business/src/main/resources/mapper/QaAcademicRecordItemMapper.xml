<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdjbd.dao.mapper.QaAcademicRecordItemMapper">
	<resultMap id="BaseResultMap" type="com.bdjbd.dao.entity.QaAcademicRecordItem">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
		<result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
		<result column="record_id" jdbcType="VARCHAR" property="recordId" />
		<result column="clause_group_id" jdbcType="VARCHAR" property="clauseGroupId" />
		<result column="standard_value" jdbcType="LONGVARCHAR" property="standardValue" />
		<result column="actual_value" jdbcType="LONGVARCHAR" property="actualValue" />
		<result column="has_pass" jdbcType="BIT" property="hasPass" />
		<result column="inner_group" jdbcType="VARCHAR" property="innerGroup" />
        <result column="inner_group_has_pass" jdbcType="BIT" property="innerGroupHasPass" />
    </resultMap>
	<sql id="Base_Column_List">
	    `id`, `create_date`, `modify_date`, `record_id`, `clause_group_id`,
        `standard_value`, `actual_value`, `has_pass`, inner_group, inner_group_has_pass
	</sql>

    <!-- 批量插入 -->
    <insert id = "batchInsert">
        INSERT INTO `qa_academic_record_item1` (<include refid="Base_Column_List" />) VALUES
        <foreach collection="items" item="item" separator=",">
            (
			#{item.id},
			#{item.createDate},
			#{item.modifyDate},
			#{item.recordId},
			#{item.clauseGroupId},
			#{item.standardValue},
			#{item.actualValue},
			#{item.hasPass},
			#{item.innerGroup},
			#{item.innerGroupHasPass}
		    )
        </foreach>
    </insert>

    <!-- 批量更新 -->
    <update id="batchUpdate">
        <foreach collection="items" item="item" index="index" open="" close="" separator=";">
            UPDATE `qa_academic_record1`
            <set>
                   <if test="item.id != null">
                       `id` = #{item.id},
                   </if>
                   <if test="item.createDate != null">
                       `create_date` = #{item.createDate},
                   </if>
                   <if test="item.modifyDate != null">
                       `modify_date` = #{item.modifyDate},
                   </if>
                   <if test="item.recordId != null">
                       `record_id` = #{item.recordId},
                   </if>
                   <if test="item.clauseGroupId != null">
                       `clause_group_id` = #{item.clauseGroupId},
                   </if>
                   <if test="item.standardValue != null">
                       `standard_value` = #{item.standardValue},
                   </if>
                   <if test="item.actualValue != null">
                       `actual_value` = #{item.actualValue},
                   </if>
                   <if test="item.hasPass != null">
                       `has_pass` = #{item.hasPass},
                   </if>
                   <if test="item.innerGroup != null">
                       `inner_group` = #{item.innerGroup},
                   </if>
                   <if test="item.innerGroupHasPass != null">
                       `inner_group_has_pass` = #{item.innerGroupHasPass},
                   </if>
            </set>
            <where>
			`id` = #{item.id}
            </where>
        </foreach>
    </update>

    <delete id="deleteByUser">
        delete from qa_academic_record_item1 where record_id in (
            select id from qa_academic_record1 where user_id = #{userId}
            )
    </delete>

    <resultMap id="notPassDetailsMap" extends="BaseResultMap" type="com.bdjbd.dao.entity.QaAcademicRecordItem">
        <result property="clauseGroupName" column="clauseGroupName" javaType="String"></result>
    </resultMap>

    <select id="findNotPassDetails" resultMap="notPassDetailsMap">
            SELECT
            a.*,
            b.title clauseGroupName
            FROM
            `qa_academic_record_item1` a
            LEFT JOIN qa_base_clause_group b ON a.clause_group_id = b.id
            WHERE
            a.record_id = #{recordId}
            and a.has_pass = false and a.inner_group_has_pass = false
    </select>
    <select id="findRecordList" resultType="java.lang.String">
        SELECT record_id FROM `qa_academic_record_item1` WHERE clause_group_id = #{groupId}
        AND has_pass = #{status}
        GROUP BY record_id
    </select>

    <select id="findMaxOrder" parameterType="java.lang.String" resultType="java.lang.Integer">
        select orders from qa_standard_record_item where parameter_group_id = #{groupId} and record_id = #{recordId} order by orders desc limit 1
    </select>
</mapper>