<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdjbd.dao.mapper.QaAcademicRecordMapper">
	<resultMap id="BaseResultMap" type="com.bdjbd.dao.entity.QaAcademicRecord">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
		<result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="category_id" jdbcType="VARCHAR" property="categoryId" />
		<result column="category_child_id" jdbcType="VARCHAR" property="categoryChildId" />
		<result column="category_academic_id" jdbcType="VARCHAR" property="categoryAcademicId" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="first_check_status" jdbcType="INTEGER" property="firstCheckStatus" />
		<result column="first_check_date" jdbcType="TIMESTAMP" property="firstCheckDate" />
		<result column="second_check_status" jdbcType="INTEGER" property="secondCheckStatus" />
		<result column="second_check_date" jdbcType="TIMESTAMP" property="secondCheckDate" />
		<result column="memo" jdbcType="VARCHAR" property="memo" />

        <result column="cur_academic_id" jdbcType="VARCHAR" property="curAcademicId" />
        <result column="cur_academic_date" jdbcType="TIMESTAMP" property="curAcademicDate" />
        <result column="cur_category_id" jdbcType="VARCHAR" property="curCategoryId" />
        <result column="cur_category_child_id" jdbcType="VARCHAR" property="curCategoryChildId" />
        <result column="academic_type" jdbcType="VARCHAR" property="academicType" />
        <result column="has_across" jdbcType="BIT" property="hasAcross" />
        <result column="has_user_input" jdbcType="BIT" property="hasUserInput" />
        <result column="attr0" jdbcType="VARCHAR" property="attr0" />
        <result column="attr1" jdbcType="VARCHAR" property="attr1" />
        <result column="attr2" jdbcType="VARCHAR" property="attr2" />
        <result column="attr3" jdbcType="VARCHAR" property="attr3" />
        <result column="attr4" jdbcType="VARCHAR" property="attr4" />
	</resultMap>
	<sql id="Base_Column_List">
	`id`, `create_date`, `modify_date`, `user_id`, `user_name`, `category_id`, `category_child_id`,
	`category_academic_id`, `status`, `first_check_status`, `first_check_date`, `second_check_status`, `second_check_date`, `memo`,
	`cur_academic_id`,`cur_academic_date`,`cur_category_id`,`cur_category_child_id`,`academic_type`,`has_across`,
    `has_user_input`,`attr0`,`attr1` ,`attr2`,`attr3`,`attr4`
	</sql>

    <!-- 批量插入 -->
    <insert id = "batchInsert">
        INSERT INTO `qa_academic_record1` (<include refid="Base_Column_List" />) VALUES
        <foreach collection="items" item="item" separator=",">
            (
			#{item.id},
		    
			#{item.createDate},
		    
			#{item.modifyDate},
		    
			#{item.userId},
		    
			#{item.userName},
		    
			#{item.categoryId},
		    
			#{item.categoryChildId},
		    
			#{item.categoryAcademicId},
		    
			#{item.status},
		    
			#{item.firstCheckStatus},
		    
			#{item.firstCheckDate},
		    
			#{item.secondCheckStatus},
		    
			#{item.secondCheckDate},
		    
			#{item.memo},

            #{item.curAcademicId},

            #{item.curAcademicDate},

            #{item.curCategoryId},

            #{item.curCategoryChildId},

            #{item.academicType},

            #{item.hasAcross},

            #{item.hasUserInput},

            #{item.attr0},

            #{item.attr1},

            #{item.attr2},

            #{item.attr3},

            #{item.attr4}
		    )
        </foreach>
    </insert>

    <!-- 批量更新 -->
    <update id="batchUpdate">
        <foreach collection="items" item="item" index="index" open="" close="" separator=";">
            UPDATE `qa_academic_record1`
            <set>
                   <if test="item.id != null">
                       `id` = #{item.id},
                   </if>
                   <if test="item.createDate != null">
                       `create_date` = #{item.createDate},
                   </if>
                   <if test="item.modifyDate != null">
                       `modify_date` = #{item.modifyDate},
                   </if>
                   <if test="item.userId != null">
                       `user_id` = #{item.userId},
                   </if>
                   <if test="item.userName != null">
                       `user_name` = #{item.userName},
                   </if>
                   <if test="item.categoryId != null">
                       `category_id` = #{item.categoryId},
                   </if>
                   <if test="item.categoryChildId != null">
                       `category_child_id` = #{item.categoryChildId},
                   </if>
                   <if test="item.categoryAcademicId != null">
                       `category_academic_id` = #{item.categoryAcademicId},
                   </if>
                   <if test="item.status != null">
                       `status` = #{item.status},
                   </if>
                   <if test="item.firstCheckStatus != null">
                       `first_check_status` = #{item.firstCheckStatus},
                   </if>
                   <if test="item.firstCheckDate != null">
                       `first_check_date` = #{item.firstCheckDate},
                   </if>
                   <if test="item.secondCheckStatus != null">
                       `second_check_status` = #{item.secondCheckStatus},
                   </if>
                   <if test="item.secondCheckDate != null">
                       `second_check_date` = #{item.secondCheckDate},
                   </if>
                   <if test="item.memo != null">
                       `memo` = #{item.memo},
                   </if>
                    <if test="item.curAcademicId != null">
                        `cur_academic_id`= #{item.curAcademicId},
                    </if>
                    <if test="item.curAcademicDate != null">
                        `cur_academic_date`= #{item.curAcademicDate},
                    </if>
                    <if test="item.curCategoryId != null">
                        `cur_category_id` = #{item.curCategoryId},
                    </if>
                    <if test="item.curCategoryChildId != null">
                        `cur_category_childId` = #{item.curCategoryChildId},
                    </if>
                    <if test="item.academicType != null">
                        `academic_type` = #{item.academicType},
                    </if>
                    <if test="item.hasAcross != null">
                        `has_across`= #{item.hasAcross},
                    </if>
                    <if test="item.hasUserInput != null">
                      `has_user_input` = #{item.hasUserInput},
                    </if>
                     <if test="item.attr0 != null">
                       `attr0`=#{item.attr0},
                     </if>
                    <if test="item.attr1 != null">
                    `attr1`= #{item.attr1},
                    </if>
                    <if test="item.attr2 != null">
                    `attr2`=#{item.attr2},
                    </if>
                    <if test="item.attr3 != null">
                    `attr3`=#{item.attr3},
                    </if>
                    <if test="item.attr4 != null">
                    `attr4`=#{item.attr4}
                    </if>
            </set>
            <where>
			`id` = #{item.id}
            </where>
        </foreach>
    </update>

    <delete id="deleteByUser">
        delete from qa_academic_record1 where user_id = #{userId}
    </delete>
</mapper>